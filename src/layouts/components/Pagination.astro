---
const { section, currentPage, totalPages } = Astro.props;

const indexPageLink = currentPage === 2;
const hasPrevPage = currentPage > 1;
const hasNextPage = totalPages > currentPage;

let pageList = [];
for (let i = 1; i <= totalPages; i++) {
  pageList.push(i);
}
---

{
  totalPages > 1 && (
    <nav aria-label="Pagination">
      <ul class="flex items-center -space-x-px h-6 justify-center text-base">
        {/* Previous Button */}
        <li>
          {hasPrevPage ? (
            <a
              href={
                indexPageLink
                  ? `${section ? "/" + section : "/"}`
                  : `${section ? "/" + section : ""}/page/${currentPage - 1}/`
              }
              class="flex items-center justify-center px-2 h-8 ms-0 leading-tight text-gray-400 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
              style="border-top-left-radius: 50%; border-bottom-left-radius: 50%"
            >
              <span class="sr-only">Previous</span>
              <svg
                class="w-3 h-3 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 1 1 5l4 4"
                />
              </svg>
            </a>
          ) : (
            <span style=" padding: 8px 8px; border-top-left-radius: 50%; border-bottom-left-radius: 50%" class="flex items-center justify-center px-4 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg opacity-40 pointer-events-none">
              <span class="sr-only">Previous</span>
              <svg
                class="w-3 h-3 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 1 1 5l4 4"
                />
              </svg>
            </span>
          )}
        </li>

        {/* Page Links */}
        {pageList.map((pagination) =>
          pagination === currentPage ? (
            <li>
              <span
                aria-current="page"
                style="padding: 8px 11px;"
                class="z-10 flex items-center justify-center px-4 h-8 leading-tight text-gray-600 border border-gray-300  hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white"
              >
              {pagination}
              </span>
            </li>
          ) : (
            <li>
              <a
                href={
                  pagination === 1
                    ? `${section ? "/" + section : "/"}`
                    : `${section ? "/" + section : ""}/page/${pagination}/`
                }
                class="flex items-center justify-center  h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
              style="padding: 8px 9px;"
              >
                {pagination}
              </a>
            </li>
          )
        )}

        {/* Next Button */}
        <li>
          {hasNextPage ? (
            <a
              href={`${section ? "/" + section : ""}/page/${currentPage + 1}/`}
              class="flex items-center justify-center px-2 h-8 leading-tight text-gray-400 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
            style="padding:8px 8px; border-top-right-radius: 50%; border-bottom-right-radius: 50%"
            >
              <span class="sr-only">Next</span>
              <svg
                class="w-3 h-3 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="m1 9 4-4-4-4"
                />
              </svg>
            </a>
          ) : (
            <span class="flex items-center justify-center px-4 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg opacity-40 pointer-events-none">
              <span class="sr-only">Next</span>
              <svg
                class="w-3 h-3 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="m1 9 4-4-4-4"
                />
              </svg>
            </span>
          )}
        </li>
      </ul>
    </nav>
  )
}
