---
import { markdownify, removeSpecialChars } from "@lib/utils/textConverter";
import {getHeadingsFromContent} from "@lib/utils/extractHeadings"
import type { Blog } from "../interfaces/blog";
import Share from "./components/Share.astro";
import dateFormat from "@lib/utils/dateFormat";
import TableContent from "@components/TableContent";
import readingTime from "@lib/utils/readingTime";
import pkg from 'react-icons/fa6/index';
import pkgIos from 'react-icons/io5/index';
const { IoHome } = pkgIos;
const { FaChevronRight } = pkg;
const { blog, isNative }: { blog: Blog; isNative: boolean } = Astro.props as {
  blog: Blog;
  isNative: boolean;
};

const { title, content, categories, slug } = blog;

const {
  imageUrl,
  imageWidth,
  imageHeight,
  imageSmallUrl,
  imageMediumUrl,
  imageSmallWidth,
  imageMediumWidth,
} = blog;

// On this site we only want 1 category
const category = categories?.[0];
const headings= getHeadingsFromContent(content);
---

<section class="section pt-[10px] blog-detail-page bg-white mt-4">
  <div class="container relative">
    <div class="flex-col lg:flex-row max-sm:w-full lg:flex gap-[30px] h-auto max-sm:px-0 px-3">
      <Share
        className="social-share mb-4 max-lg:hidden"
        title={title}
        description={removeSpecialChars(content)?.slice(0, 200)}
        slug={slug}
        isNative={isNative}
      />
      <div class="lg:w-2/3 max-sm:w-full">
        <div>
          <div class="flex flex-wrap items-center gap-2 text-[16px] pb-4">
            <a href="/">
              <span class="flex items-center text-gray-500">
                <IoHome style={{ height: 13, marginRight: 4 }} />
                <span>Home</span>
              </span>
            </a>
            <a href="/blog/">
              <span class="flex items-center text-gray-500">
                <FaChevronRight style={{ height: 13, marginInline: 4 }} />
                <span>Blog</span>
              </span>
            </a>
            <a class:list={!category ? 'hidden':""} href={`/blog/${category?.toLowerCase()}/`}>
              <span class="flex items-center text-gray-500">
                <FaChevronRight style={{ height: 13, marginInline: 4 }} />
                <span>{category}</span>
              </span>
            </a>
              <span class="flex items-center text-gray-500">
                <FaChevronRight style={{ height: 13, marginInline: 4 }} />
                <span>{title}</span>
              </span>
          </div>
        </div>
        <article class="row justify-start mx-0">
          <div class="w-full px-0 lg:mb-6 mb-4">
            <div class="text-center">
              <h1
                set:html={markdownify(title)}
                class="md:text-[48px] font-semibold text-[28px] text-[#000] text-start mb-[20px]"
              />
            </div>
            <div class="flex flex-wrap items-center gap-4 py-4 text-base font-medium text-gray-500 border-t border-b border-gray-200">
              <div>
                <span>By ABC Venture in </span>
                <span class="font-semi-bold">
                  {category}
                </span>
              </div>
              <div>
                <span class="text-[#6b7280]">{readingTime(content)}</span>
              </div>
              <div>
                <span class="text-[#6b7280]">{dateFormat(blog.createdAt)}</span>
              </div>
            </div>
          </div>
          <div class="col-12 mb-2 px-0">
            {
              imageUrl && (
                <img
                  srcset={`
                  ${imageSmallUrl} ${imageSmallWidth}w,
                  ${imageMediumUrl} ${imageMediumWidth}w,
                  ${imageUrl} ${imageWidth}w
                `}
                  sizes={`
                  (max-width: 540px) 480px,
                  (max-width: 768px) 660px,
                  (min-width: 1024px) ${imageWidth}px
                `}
                  src={imageUrl || "/images/placeholder.png"}
                  width={imageWidth}
                  height={imageHeight}
                  alt={title}
                  class="rounded w-full"
                  fetchpriority="high"
                  loading="eager"
                  decoding="async"
                />
              )
            }
          </div>

          <div class="w-full">
            <div class="mb-16 text-left">
              <div class="" set:html={content} />
            </div>
          </div>
        </article>
      </div>
      <div class="lg:w-1/3  max-sm:w-full max-lg:hidden">
        <aside>
          <h3>Table of content</h3>
          <div>
            <TableContent client:load headings={headings} isChild={false} customClass="tableSideContent bg-[#fafaff] p-3 rounded" />
          </div>
        </aside>
      </div>
    </div>
  </div>
</section>
